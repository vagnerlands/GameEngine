
varying vec3 N;
varying vec3 v;

// Values that stay constant for the whole mesh.
uniform sampler2D myTextureSampler;
// gl_FrontLightProduct[0].ambient * gl_FrontLightProduct[0].diffuse
void main(void)
{
   //gl_FragColor = vec4(normalize(gl_LightSource[0].position.xyz - v), 1);
   //vec3 L = normalize(gl_LightSource[0].position.xyz - v);   
   //vec4 Idiff = (gl_FrontLightProduct[0].diffuse) * max(dot(N,L), 0.0);  
   //Idiff = clamp(Idiff * texture( myTextureSampler, vec2(v) ), 0.0, 1.0); 

   //gl_FragColor = Idiff;
   
   //gl_FragColor = gl_FrontLightProduct[0].diffuse;
   
   
    vec3 ct,cf;
    vec4 texel;
    float intensity,at,af;
    intensity = max(dot(normalize(gl_LightSource[0].position.xyz - v),normalize(N)),0.0);
 
    cf = intensity * (gl_FrontMaterial.diffuse).rgb +
                  gl_FrontMaterial.ambient.rgb;
    af = gl_FrontMaterial.diffuse.a;
    //texel = texture2D(myTextureSampler,gl_TexCoord[0].st);
	texel = vec4(1, 0, 0, 1);
 
    ct = texel.rgb;
    at = texel.a;
    gl_FragColor = vec4(ct * cf, at * af);
   
}