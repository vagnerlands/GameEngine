#version 330 core
layout (location = 0) in vec3 aPos;
layout (location = 5) in ivec4 bone_ids;     // INT pointer
layout (location = 6) in vec4 weights;

uniform bool HasAnimations;
uniform mat4 model;
const int MAX_BONES = 100;
uniform mat4 bones[MAX_BONES];

vec4 CalculateBonesTransformations()
{
	mat4 bone_transform = bones[bone_ids[0]] * weights[0];
		bone_transform += bones[bone_ids[1]] * weights[1];
		bone_transform += bones[bone_ids[2]] * weights[2];
		bone_transform += bones[bone_ids[3]] * weights[3];
			
	return model * bone_transform * vec4(aPos, 1.0); // transformed by bones
}

vec4 ModelOnlyTransformation()
{
	return model * vec4(aPos, 1.0);
}

void main()
{
    gl_Position = HasAnimations ? CalculateBonesTransformations() : ModelOnlyTransformation();
}